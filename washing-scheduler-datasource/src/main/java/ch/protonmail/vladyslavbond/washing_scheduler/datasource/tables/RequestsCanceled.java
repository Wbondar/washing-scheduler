/**
 * This class is generated by jOOQ
 */
package ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables;


import ch.protonmail.vladyslavbond.washing_scheduler.datasource.Keys;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.Public;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.records.RequestsCanceledRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RequestsCanceled extends TableImpl<RequestsCanceledRecord> {

	private static final long serialVersionUID = -1313633068;

	/**
	 * The reference instance of <code>public.requests_canceled</code>
	 */
	public static final RequestsCanceled REQUESTS_CANCELED = new RequestsCanceled();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<RequestsCanceledRecord> getRecordType() {
		return RequestsCanceledRecord.class;
	}

	/**
	 * The column <code>public.requests_canceled.request_id</code>.
	 */
	public final TableField<RequestsCanceledRecord, Integer> REQUEST_ID = createField("request_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.requests_canceled.cancelator_id</code>.
	 */
	public final TableField<RequestsCanceledRecord, Short> CANCELATOR_ID = createField("cancelator_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

	/**
	 * The column <code>public.requests_canceled.canceled_at</code>.
	 */
	public final TableField<RequestsCanceledRecord, Timestamp> CANCELED_AT = createField("canceled_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * Create a <code>public.requests_canceled</code> table reference
	 */
	public RequestsCanceled() {
		this("requests_canceled", null);
	}

	/**
	 * Create an aliased <code>public.requests_canceled</code> table reference
	 */
	public RequestsCanceled(String alias) {
		this(alias, REQUESTS_CANCELED);
	}

	private RequestsCanceled(String alias, Table<RequestsCanceledRecord> aliased) {
		this(alias, aliased, null);
	}

	private RequestsCanceled(String alias, Table<RequestsCanceledRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<RequestsCanceledRecord> getPrimaryKey() {
		return Keys.REQUESTS_CANCELED_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<RequestsCanceledRecord>> getKeys() {
		return Arrays.<UniqueKey<RequestsCanceledRecord>>asList(Keys.REQUESTS_CANCELED_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<RequestsCanceledRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<RequestsCanceledRecord, ?>>asList(Keys.REQUESTS_CANCELED__REQUESTS_CANCELED_REQUEST_ID_FKEY, Keys.REQUESTS_CANCELED__REQUESTS_CANCELED_CANCELATOR_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RequestsCanceled as(String alias) {
		return new RequestsCanceled(alias, this);
	}

	/**
	 * Rename this table
	 */
	public RequestsCanceled rename(String name) {
		return new RequestsCanceled(name, null);
	}
}
