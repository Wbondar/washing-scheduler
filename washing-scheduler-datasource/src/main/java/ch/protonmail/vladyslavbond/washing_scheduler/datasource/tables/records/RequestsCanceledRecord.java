/**
 * This class is generated by jOOQ
 */
package ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.records;


import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.RequestsCanceled;

import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RequestsCanceledRecord extends UpdatableRecordImpl<RequestsCanceledRecord> implements Record3<Integer, Short, Timestamp> {

	private static final long serialVersionUID = 1286053838;

	/**
	 * Setter for <code>public.requests_canceled.request_id</code>.
	 */
	public void setRequestId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.requests_canceled.request_id</code>.
	 */
	public Integer getRequestId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.requests_canceled.cancelator_id</code>.
	 */
	public void setCancelatorId(Short value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.requests_canceled.cancelator_id</code>.
	 */
	public Short getCancelatorId() {
		return (Short) getValue(1);
	}

	/**
	 * Setter for <code>public.requests_canceled.canceled_at</code>.
	 */
	public void setCanceledAt(Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.requests_canceled.canceled_at</code>.
	 */
	public Timestamp getCanceledAt() {
		return (Timestamp) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Short, Timestamp> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Short, Timestamp> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return RequestsCanceled.REQUESTS_CANCELED.REQUEST_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field2() {
		return RequestsCanceled.REQUESTS_CANCELED.CANCELATOR_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return RequestsCanceled.REQUESTS_CANCELED.CANCELED_AT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getRequestId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value2() {
		return getCancelatorId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getCanceledAt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RequestsCanceledRecord value1(Integer value) {
		setRequestId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RequestsCanceledRecord value2(Short value) {
		setCancelatorId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RequestsCanceledRecord value3(Timestamp value) {
		setCanceledAt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RequestsCanceledRecord values(Integer value1, Short value2, Timestamp value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached RequestsCanceledRecord
	 */
	public RequestsCanceledRecord() {
		super(RequestsCanceled.REQUESTS_CANCELED);
	}

	/**
	 * Create a detached, initialised RequestsCanceledRecord
	 */
	public RequestsCanceledRecord(Integer requestId, Short cancelatorId, Timestamp canceledAt) {
		super(RequestsCanceled.REQUESTS_CANCELED);

		setValue(0, requestId);
		setValue(1, cancelatorId);
		setValue(2, canceledAt);
	}
}
