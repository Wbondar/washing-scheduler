/**
 * This class is generated by jOOQ
 */
package ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.records;


import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.Users;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Row1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record1<Short> {

	private static final long serialVersionUID = -2146702387;

	/**
	 * Setter for <code>public.users.id</code>.
	 */
	public void setId(Short value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.users.id</code>.
	 */
	public Short getId() {
		return (Short) getValue(0);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Short> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record1 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row1<Short> fieldsRow() {
		return (Row1) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row1<Short> valuesRow() {
		return (Row1) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field1() {
		return Users.USERS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UsersRecord value1(Short value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UsersRecord values(Short value1) {
		value1(value1);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached UsersRecord
	 */
	public UsersRecord() {
		super(Users.USERS);
	}

	/**
	 * Create a detached, initialised UsersRecord
	 */
	public UsersRecord(Short id) {
		super(Users.USERS);

		setValue(0, id);
	}
}
