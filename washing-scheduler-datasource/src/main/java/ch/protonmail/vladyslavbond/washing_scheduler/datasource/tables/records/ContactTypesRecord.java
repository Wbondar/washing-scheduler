/**
 * This class is generated by jOOQ
 */
package ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.records;


import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.ContactTypes;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContactTypesRecord extends UpdatableRecordImpl<ContactTypesRecord> implements Record2<Short, String> {

	private static final long serialVersionUID = -1449605436;

	/**
	 * Setter for <code>public.contact_types.id</code>.
	 */
	public void setId(Short value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.contact_types.id</code>.
	 */
	public Short getId() {
		return (Short) getValue(0);
	}

	/**
	 * Setter for <code>public.contact_types.meta</code>.
	 */
	public void setMeta(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.contact_types.meta</code>.
	 */
	public String getMeta() {
		return (String) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Short> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Short, String> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Short, String> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field1() {
		return ContactTypes.CONTACT_TYPES.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return ContactTypes.CONTACT_TYPES.META;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getMeta();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContactTypesRecord value1(Short value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContactTypesRecord value2(String value) {
		setMeta(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContactTypesRecord values(Short value1, String value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ContactTypesRecord
	 */
	public ContactTypesRecord() {
		super(ContactTypes.CONTACT_TYPES);
	}

	/**
	 * Create a detached, initialised ContactTypesRecord
	 */
	public ContactTypesRecord(Short id, String meta) {
		super(ContactTypes.CONTACT_TYPES);

		setValue(0, id);
		setValue(1, meta);
	}
}
