/**
 * This class is generated by jOOQ
 */
package ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables;


import ch.protonmail.vladyslavbond.washing_scheduler.datasource.Keys;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.Public;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.records.ContactTypesRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContactTypes extends TableImpl<ContactTypesRecord> {

	private static final long serialVersionUID = -940537302;

	/**
	 * The reference instance of <code>public.contact_types</code>
	 */
	public static final ContactTypes CONTACT_TYPES = new ContactTypes();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ContactTypesRecord> getRecordType() {
		return ContactTypesRecord.class;
	}

	/**
	 * The column <code>public.contact_types.id</code>.
	 */
	public final TableField<ContactTypesRecord, Short> ID = createField("id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.contact_types.meta</code>.
	 */
	public final TableField<ContactTypesRecord, String> META = createField("meta", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false), this, "");

	/**
	 * Create a <code>public.contact_types</code> table reference
	 */
	public ContactTypes() {
		this("contact_types", null);
	}

	/**
	 * Create an aliased <code>public.contact_types</code> table reference
	 */
	public ContactTypes(String alias) {
		this(alias, CONTACT_TYPES);
	}

	private ContactTypes(String alias, Table<ContactTypesRecord> aliased) {
		this(alias, aliased, null);
	}

	private ContactTypes(String alias, Table<ContactTypesRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ContactTypesRecord, Short> getIdentity() {
		return Keys.IDENTITY_CONTACT_TYPES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ContactTypesRecord> getPrimaryKey() {
		return Keys.CONTACT_TYPES_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ContactTypesRecord>> getKeys() {
		return Arrays.<UniqueKey<ContactTypesRecord>>asList(Keys.CONTACT_TYPES_PKEY, Keys.CONTACT_TYPES_META_KEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContactTypes as(String alias) {
		return new ContactTypes(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ContactTypes rename(String name) {
		return new ContactTypes(name, null);
	}
}
