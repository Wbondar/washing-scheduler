/**
 * This class is generated by jOOQ
 */
package ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables;


import ch.protonmail.vladyslavbond.washing_scheduler.datasource.Keys;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.Public;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.records.MachineComebacksRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MachineComebacks extends TableImpl<MachineComebacksRecord> {

	private static final long serialVersionUID = -992422760;

	/**
	 * The reference instance of <code>public.machine_comebacks</code>
	 */
	public static final MachineComebacks MACHINE_COMEBACKS = new MachineComebacks();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MachineComebacksRecord> getRecordType() {
		return MachineComebacksRecord.class;
	}

	/**
	 * The column <code>public.machine_comebacks.failure_id</code>.
	 */
	public final TableField<MachineComebacksRecord, Short> FAILURE_ID = createField("failure_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

	/**
	 * The column <code>public.machine_comebacks.occured_at</code>.
	 */
	public final TableField<MachineComebacksRecord, Timestamp> OCCURED_AT = createField("occured_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * Create a <code>public.machine_comebacks</code> table reference
	 */
	public MachineComebacks() {
		this("machine_comebacks", null);
	}

	/**
	 * Create an aliased <code>public.machine_comebacks</code> table reference
	 */
	public MachineComebacks(String alias) {
		this(alias, MACHINE_COMEBACKS);
	}

	private MachineComebacks(String alias, Table<MachineComebacksRecord> aliased) {
		this(alias, aliased, null);
	}

	private MachineComebacks(String alias, Table<MachineComebacksRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MachineComebacksRecord> getPrimaryKey() {
		return Keys.MACHINE_COMEBACKS_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MachineComebacksRecord>> getKeys() {
		return Arrays.<UniqueKey<MachineComebacksRecord>>asList(Keys.MACHINE_COMEBACKS_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<MachineComebacksRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<MachineComebacksRecord, ?>>asList(Keys.MACHINE_COMEBACKS__MACHINE_COMEBACKS_FAILURE_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MachineComebacks as(String alias) {
		return new MachineComebacks(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MachineComebacks rename(String name) {
		return new MachineComebacks(name, null);
	}
}
