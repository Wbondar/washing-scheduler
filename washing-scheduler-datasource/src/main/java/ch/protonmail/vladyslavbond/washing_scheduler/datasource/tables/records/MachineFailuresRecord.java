/**
 * This class is generated by jOOQ
 */
package ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.records;


import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.MachineFailures;

import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MachineFailuresRecord extends UpdatableRecordImpl<MachineFailuresRecord> implements Record3<Short, Short, Timestamp> {

	private static final long serialVersionUID = 65171486;

	/**
	 * Setter for <code>public.machine_failures.id</code>.
	 */
	public void setId(Short value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.machine_failures.id</code>.
	 */
	public Short getId() {
		return (Short) getValue(0);
	}

	/**
	 * Setter for <code>public.machine_failures.machine_id</code>.
	 */
	public void setMachineId(Short value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.machine_failures.machine_id</code>.
	 */
	public Short getMachineId() {
		return (Short) getValue(1);
	}

	/**
	 * Setter for <code>public.machine_failures.occured_at</code>.
	 */
	public void setOccuredAt(Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.machine_failures.occured_at</code>.
	 */
	public Timestamp getOccuredAt() {
		return (Timestamp) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Short> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Short, Short, Timestamp> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Short, Short, Timestamp> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field1() {
		return MachineFailures.MACHINE_FAILURES.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field2() {
		return MachineFailures.MACHINE_FAILURES.MACHINE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return MachineFailures.MACHINE_FAILURES.OCCURED_AT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value2() {
		return getMachineId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getOccuredAt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MachineFailuresRecord value1(Short value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MachineFailuresRecord value2(Short value) {
		setMachineId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MachineFailuresRecord value3(Timestamp value) {
		setOccuredAt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MachineFailuresRecord values(Short value1, Short value2, Timestamp value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MachineFailuresRecord
	 */
	public MachineFailuresRecord() {
		super(MachineFailures.MACHINE_FAILURES);
	}

	/**
	 * Create a detached, initialised MachineFailuresRecord
	 */
	public MachineFailuresRecord(Short id, Short machineId, Timestamp occuredAt) {
		super(MachineFailures.MACHINE_FAILURES);

		setValue(0, id);
		setValue(1, machineId);
		setValue(2, occuredAt);
	}
}
