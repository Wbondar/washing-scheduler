/**
 * This class is generated by jOOQ
 */
package ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables;


import ch.protonmail.vladyslavbond.washing_scheduler.datasource.Keys;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.Public;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.records.UserAccountsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserAccounts extends TableImpl<UserAccountsRecord> {

	private static final long serialVersionUID = -736549654;

	/**
	 * The reference instance of <code>public.user_accounts</code>
	 */
	public static final UserAccounts USER_ACCOUNTS = new UserAccounts();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UserAccountsRecord> getRecordType() {
		return UserAccountsRecord.class;
	}

	/**
	 * The column <code>public.user_accounts.user_id</code>.
	 */
	public final TableField<UserAccountsRecord, Short> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

	/**
	 * The column <code>public.user_accounts.account_id</code>.
	 */
	public final TableField<UserAccountsRecord, Short> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

	/**
	 * Create a <code>public.user_accounts</code> table reference
	 */
	public UserAccounts() {
		this("user_accounts", null);
	}

	/**
	 * Create an aliased <code>public.user_accounts</code> table reference
	 */
	public UserAccounts(String alias) {
		this(alias, USER_ACCOUNTS);
	}

	private UserAccounts(String alias, Table<UserAccountsRecord> aliased) {
		this(alias, aliased, null);
	}

	private UserAccounts(String alias, Table<UserAccountsRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<UserAccountsRecord> getPrimaryKey() {
		return Keys.USER_ACCOUNTS_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<UserAccountsRecord>> getKeys() {
		return Arrays.<UniqueKey<UserAccountsRecord>>asList(Keys.USER_ACCOUNTS_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<UserAccountsRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<UserAccountsRecord, ?>>asList(Keys.USER_ACCOUNTS__USER_ACCOUNTS_USER_ID_FKEY, Keys.USER_ACCOUNTS__USER_ACCOUNTS_ACCOUNT_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserAccounts as(String alias) {
		return new UserAccounts(alias, this);
	}

	/**
	 * Rename this table
	 */
	public UserAccounts rename(String name) {
		return new UserAccounts(name, null);
	}
}
