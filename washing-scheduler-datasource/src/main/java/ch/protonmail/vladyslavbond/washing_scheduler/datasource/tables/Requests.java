/**
 * This class is generated by jOOQ
 */
package ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables;


import ch.protonmail.vladyslavbond.washing_scheduler.datasource.Keys;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.Public;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.records.RequestsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Requests extends TableImpl<RequestsRecord> {

	private static final long serialVersionUID = -1649210037;

	/**
	 * The reference instance of <code>public.requests</code>
	 */
	public static final Requests REQUESTS = new Requests();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<RequestsRecord> getRecordType() {
		return RequestsRecord.class;
	}

	/**
	 * The column <code>public.requests.id</code>.
	 */
	public final TableField<RequestsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.requests.machine_id</code>.
	 */
	public final TableField<RequestsRecord, Short> MACHINE_ID = createField("machine_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

	/**
	 * The column <code>public.requests.client_id</code>.
	 */
	public final TableField<RequestsRecord, Short> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

	/**
	 * The column <code>public.requests.requested_at</code>.
	 */
	public final TableField<RequestsRecord, Timestamp> REQUESTED_AT = createField("requested_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>public.requests.locked_at</code>.
	 */
	public final TableField<RequestsRecord, Timestamp> LOCKED_AT = createField("locked_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>public.requests.unlocked_at</code>.
	 */
	public final TableField<RequestsRecord, Timestamp> UNLOCKED_AT = createField("unlocked_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * Create a <code>public.requests</code> table reference
	 */
	public Requests() {
		this("requests", null);
	}

	/**
	 * Create an aliased <code>public.requests</code> table reference
	 */
	public Requests(String alias) {
		this(alias, REQUESTS);
	}

	private Requests(String alias, Table<RequestsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Requests(String alias, Table<RequestsRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<RequestsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_REQUESTS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<RequestsRecord> getPrimaryKey() {
		return Keys.REQUESTS_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<RequestsRecord>> getKeys() {
		return Arrays.<UniqueKey<RequestsRecord>>asList(Keys.REQUESTS_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Requests as(String alias) {
		return new Requests(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Requests rename(String name) {
		return new Requests(name, null);
	}
}
