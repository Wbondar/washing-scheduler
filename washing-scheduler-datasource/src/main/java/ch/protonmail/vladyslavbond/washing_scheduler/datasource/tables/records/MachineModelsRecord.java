/**
 * This class is generated by jOOQ
 */
package ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.records;


import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.MachineModels;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MachineModelsRecord extends UpdatableRecordImpl<MachineModelsRecord> implements Record3<Short, Short, String> {

	private static final long serialVersionUID = 321885932;

	/**
	 * Setter for <code>public.machine_models.id</code>.
	 */
	public void setId(Short value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.machine_models.id</code>.
	 */
	public Short getId() {
		return (Short) getValue(0);
	}

	/**
	 * Setter for <code>public.machine_models.manufacturer_id</code>.
	 */
	public void setManufacturerId(Short value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.machine_models.manufacturer_id</code>.
	 */
	public Short getManufacturerId() {
		return (Short) getValue(1);
	}

	/**
	 * Setter for <code>public.machine_models.code</code>.
	 */
	public void setCode(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.machine_models.code</code>.
	 */
	public String getCode() {
		return (String) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Short> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Short, Short, String> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Short, Short, String> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field1() {
		return MachineModels.MACHINE_MODELS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field2() {
		return MachineModels.MACHINE_MODELS.MANUFACTURER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return MachineModels.MACHINE_MODELS.CODE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value2() {
		return getManufacturerId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getCode();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MachineModelsRecord value1(Short value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MachineModelsRecord value2(Short value) {
		setManufacturerId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MachineModelsRecord value3(String value) {
		setCode(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MachineModelsRecord values(Short value1, Short value2, String value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MachineModelsRecord
	 */
	public MachineModelsRecord() {
		super(MachineModels.MACHINE_MODELS);
	}

	/**
	 * Create a detached, initialised MachineModelsRecord
	 */
	public MachineModelsRecord(Short id, Short manufacturerId, String code) {
		super(MachineModels.MACHINE_MODELS);

		setValue(0, id);
		setValue(1, manufacturerId);
		setValue(2, code);
	}
}
