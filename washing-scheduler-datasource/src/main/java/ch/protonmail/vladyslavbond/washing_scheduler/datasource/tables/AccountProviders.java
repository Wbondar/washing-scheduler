/**
 * This class is generated by jOOQ
 */
package ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables;


import ch.protonmail.vladyslavbond.washing_scheduler.datasource.Keys;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.Public;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.records.AccountProvidersRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountProviders extends TableImpl<AccountProvidersRecord> {

	private static final long serialVersionUID = -770205446;

	/**
	 * The reference instance of <code>public.account_providers</code>
	 */
	public static final AccountProviders ACCOUNT_PROVIDERS = new AccountProviders();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AccountProvidersRecord> getRecordType() {
		return AccountProvidersRecord.class;
	}

	/**
	 * The column <code>public.account_providers.id</code>.
	 */
	public final TableField<AccountProvidersRecord, Short> ID = createField("id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.account_providers.meta</code>.
	 */
	public final TableField<AccountProvidersRecord, String> META = createField("meta", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false), this, "");

	/**
	 * Create a <code>public.account_providers</code> table reference
	 */
	public AccountProviders() {
		this("account_providers", null);
	}

	/**
	 * Create an aliased <code>public.account_providers</code> table reference
	 */
	public AccountProviders(String alias) {
		this(alias, ACCOUNT_PROVIDERS);
	}

	private AccountProviders(String alias, Table<AccountProvidersRecord> aliased) {
		this(alias, aliased, null);
	}

	private AccountProviders(String alias, Table<AccountProvidersRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<AccountProvidersRecord, Short> getIdentity() {
		return Keys.IDENTITY_ACCOUNT_PROVIDERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AccountProvidersRecord> getPrimaryKey() {
		return Keys.ACCOUNT_PROVIDERS_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AccountProvidersRecord>> getKeys() {
		return Arrays.<UniqueKey<AccountProvidersRecord>>asList(Keys.ACCOUNT_PROVIDERS_PKEY, Keys.ACCOUNT_PROVIDERS_META_KEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountProviders as(String alias) {
		return new AccountProviders(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AccountProviders rename(String name) {
		return new AccountProviders(name, null);
	}
}
