/**
 * This class is generated by jOOQ
 */
package ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.records;


import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.AccountProviders;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountProvidersRecord extends UpdatableRecordImpl<AccountProvidersRecord> implements Record2<Short, String> {

	private static final long serialVersionUID = 1685296588;

	/**
	 * Setter for <code>public.account_providers.id</code>.
	 */
	public void setId(Short value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.account_providers.id</code>.
	 */
	public Short getId() {
		return (Short) getValue(0);
	}

	/**
	 * Setter for <code>public.account_providers.meta</code>.
	 */
	public void setMeta(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.account_providers.meta</code>.
	 */
	public String getMeta() {
		return (String) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Short> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Short, String> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Short, String> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field1() {
		return AccountProviders.ACCOUNT_PROVIDERS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return AccountProviders.ACCOUNT_PROVIDERS.META;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getMeta();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountProvidersRecord value1(Short value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountProvidersRecord value2(String value) {
		setMeta(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountProvidersRecord values(Short value1, String value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AccountProvidersRecord
	 */
	public AccountProvidersRecord() {
		super(AccountProviders.ACCOUNT_PROVIDERS);
	}

	/**
	 * Create a detached, initialised AccountProvidersRecord
	 */
	public AccountProvidersRecord(Short id, String meta) {
		super(AccountProviders.ACCOUNT_PROVIDERS);

		setValue(0, id);
		setValue(1, meta);
	}
}
