/**
 * This class is generated by jOOQ
 */
package ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.records;


import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.Machines;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MachinesRecord extends UpdatableRecordImpl<MachinesRecord> implements Record2<Short, Short> {

	private static final long serialVersionUID = 567410521;

	/**
	 * Setter for <code>public.machines.id</code>.
	 */
	public void setId(Short value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.machines.id</code>.
	 */
	public Short getId() {
		return (Short) getValue(0);
	}

	/**
	 * Setter for <code>public.machines.model_id</code>.
	 */
	public void setModelId(Short value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.machines.model_id</code>.
	 */
	public Short getModelId() {
		return (Short) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Short> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Short, Short> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Short, Short> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field1() {
		return Machines.MACHINES.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field2() {
		return Machines.MACHINES.MODEL_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value2() {
		return getModelId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MachinesRecord value1(Short value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MachinesRecord value2(Short value) {
		setModelId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MachinesRecord values(Short value1, Short value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MachinesRecord
	 */
	public MachinesRecord() {
		super(Machines.MACHINES);
	}

	/**
	 * Create a detached, initialised MachinesRecord
	 */
	public MachinesRecord(Short id, Short modelId) {
		super(Machines.MACHINES);

		setValue(0, id);
		setValue(1, modelId);
	}
}
