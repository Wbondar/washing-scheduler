/**
 * This class is generated by jOOQ
 */
package ch.protonmail.vladyslavbond.washing_scheduler.datasource;


import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.AccountProviders;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.Accounts;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.AvailableMachines;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.ContactTypes;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.Contacts;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.CurrentReservations;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.EffectiveReservations;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.MachineComebacks;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.MachineFailures;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.MachineManufacturers;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.MachineModels;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.Machines;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.Requests;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.RequestsCanceled;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.Reservations;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.UserAccounts;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.Users;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

	private static final long serialVersionUID = -161852765;

	/**
	 * The reference instance of <code>public</code>
	 */
	public static final Public PUBLIC = new Public();

	/**
	 * No further instances allowed
	 */
	private Public() {
		super("public");
	}

	@Override
	public final List<Table<?>> getTables() {
		List result = new ArrayList();
		result.addAll(getTables0());
		return result;
	}

	private final List<Table<?>> getTables0() {
		return Arrays.<Table<?>>asList(
			AccountProviders.ACCOUNT_PROVIDERS,
			Accounts.ACCOUNTS,
			AvailableMachines.AVAILABLE_MACHINES,
			Contacts.CONTACTS,
			ContactTypes.CONTACT_TYPES,
			CurrentReservations.CURRENT_RESERVATIONS,
			EffectiveReservations.EFFECTIVE_RESERVATIONS,
			MachineComebacks.MACHINE_COMEBACKS,
			MachineFailures.MACHINE_FAILURES,
			MachineManufacturers.MACHINE_MANUFACTURERS,
			MachineModels.MACHINE_MODELS,
			Machines.MACHINES,
			Requests.REQUESTS,
			RequestsCanceled.REQUESTS_CANCELED,
			Reservations.RESERVATIONS,
			UserAccounts.USER_ACCOUNTS,
			Users.USERS);
	}
}
