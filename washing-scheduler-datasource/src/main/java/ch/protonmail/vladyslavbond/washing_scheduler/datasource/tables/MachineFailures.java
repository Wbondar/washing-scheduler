/**
 * This class is generated by jOOQ
 */
package ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables;


import ch.protonmail.vladyslavbond.washing_scheduler.datasource.Keys;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.Public;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.records.MachineFailuresRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MachineFailures extends TableImpl<MachineFailuresRecord> {

	private static final long serialVersionUID = -171609056;

	/**
	 * The reference instance of <code>public.machine_failures</code>
	 */
	public static final MachineFailures MACHINE_FAILURES = new MachineFailures();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MachineFailuresRecord> getRecordType() {
		return MachineFailuresRecord.class;
	}

	/**
	 * The column <code>public.machine_failures.id</code>.
	 */
	public final TableField<MachineFailuresRecord, Short> ID = createField("id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.machine_failures.machine_id</code>.
	 */
	public final TableField<MachineFailuresRecord, Short> MACHINE_ID = createField("machine_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

	/**
	 * The column <code>public.machine_failures.occured_at</code>.
	 */
	public final TableField<MachineFailuresRecord, Timestamp> OCCURED_AT = createField("occured_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * Create a <code>public.machine_failures</code> table reference
	 */
	public MachineFailures() {
		this("machine_failures", null);
	}

	/**
	 * Create an aliased <code>public.machine_failures</code> table reference
	 */
	public MachineFailures(String alias) {
		this(alias, MACHINE_FAILURES);
	}

	private MachineFailures(String alias, Table<MachineFailuresRecord> aliased) {
		this(alias, aliased, null);
	}

	private MachineFailures(String alias, Table<MachineFailuresRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<MachineFailuresRecord, Short> getIdentity() {
		return Keys.IDENTITY_MACHINE_FAILURES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MachineFailuresRecord> getPrimaryKey() {
		return Keys.MACHINE_FAILURES_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MachineFailuresRecord>> getKeys() {
		return Arrays.<UniqueKey<MachineFailuresRecord>>asList(Keys.MACHINE_FAILURES_PKEY, Keys.MACHINE_FAILURES_MACHINE_ID_OCCURED_AT_KEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<MachineFailuresRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<MachineFailuresRecord, ?>>asList(Keys.MACHINE_FAILURES__MACHINE_FAILURES_MACHINE_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MachineFailures as(String alias) {
		return new MachineFailures(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MachineFailures rename(String name) {
		return new MachineFailures(name, null);
	}
}
