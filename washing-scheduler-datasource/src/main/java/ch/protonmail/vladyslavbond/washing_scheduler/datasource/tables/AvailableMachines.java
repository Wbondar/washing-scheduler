/**
 * This class is generated by jOOQ
 */
package ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables;


import ch.protonmail.vladyslavbond.washing_scheduler.datasource.Public;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.records.AvailableMachinesRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AvailableMachines extends TableImpl<AvailableMachinesRecord> {

	private static final long serialVersionUID = -1639591340;

	/**
	 * The reference instance of <code>public.available_machines</code>
	 */
	public static final AvailableMachines AVAILABLE_MACHINES = new AvailableMachines();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AvailableMachinesRecord> getRecordType() {
		return AvailableMachinesRecord.class;
	}

	/**
	 * The column <code>public.available_machines.id</code>.
	 */
	public final TableField<AvailableMachinesRecord, Short> ID = createField("id", org.jooq.impl.SQLDataType.SMALLINT, this, "");

	/**
	 * The column <code>public.available_machines.model_id</code>.
	 */
	public final TableField<AvailableMachinesRecord, Short> MODEL_ID = createField("model_id", org.jooq.impl.SQLDataType.SMALLINT, this, "");

	/**
	 * The column <code>public.available_machines.load</code>.
	 */
	public final TableField<AvailableMachinesRecord, Long> LOAD = createField("load", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * Create a <code>public.available_machines</code> table reference
	 */
	public AvailableMachines() {
		this("available_machines", null);
	}

	/**
	 * Create an aliased <code>public.available_machines</code> table reference
	 */
	public AvailableMachines(String alias) {
		this(alias, AVAILABLE_MACHINES);
	}

	private AvailableMachines(String alias, Table<AvailableMachinesRecord> aliased) {
		this(alias, aliased, null);
	}

	private AvailableMachines(String alias, Table<AvailableMachinesRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AvailableMachines as(String alias) {
		return new AvailableMachines(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AvailableMachines rename(String name) {
		return new AvailableMachines(name, null);
	}
}
