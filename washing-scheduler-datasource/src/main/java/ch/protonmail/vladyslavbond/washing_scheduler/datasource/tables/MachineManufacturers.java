/**
 * This class is generated by jOOQ
 */
package ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables;


import ch.protonmail.vladyslavbond.washing_scheduler.datasource.Keys;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.Public;
import ch.protonmail.vladyslavbond.washing_scheduler.datasource.tables.records.MachineManufacturersRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MachineManufacturers extends TableImpl<MachineManufacturersRecord> {

	private static final long serialVersionUID = 687277584;

	/**
	 * The reference instance of <code>public.machine_manufacturers</code>
	 */
	public static final MachineManufacturers MACHINE_MANUFACTURERS = new MachineManufacturers();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MachineManufacturersRecord> getRecordType() {
		return MachineManufacturersRecord.class;
	}

	/**
	 * The column <code>public.machine_manufacturers.id</code>.
	 */
	public final TableField<MachineManufacturersRecord, Short> ID = createField("id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.machine_manufacturers.title</code>.
	 */
	public final TableField<MachineManufacturersRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * Create a <code>public.machine_manufacturers</code> table reference
	 */
	public MachineManufacturers() {
		this("machine_manufacturers", null);
	}

	/**
	 * Create an aliased <code>public.machine_manufacturers</code> table reference
	 */
	public MachineManufacturers(String alias) {
		this(alias, MACHINE_MANUFACTURERS);
	}

	private MachineManufacturers(String alias, Table<MachineManufacturersRecord> aliased) {
		this(alias, aliased, null);
	}

	private MachineManufacturers(String alias, Table<MachineManufacturersRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<MachineManufacturersRecord, Short> getIdentity() {
		return Keys.IDENTITY_MACHINE_MANUFACTURERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MachineManufacturersRecord> getPrimaryKey() {
		return Keys.MACHINE_MANUFACTURERS_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MachineManufacturersRecord>> getKeys() {
		return Arrays.<UniqueKey<MachineManufacturersRecord>>asList(Keys.MACHINE_MANUFACTURERS_PKEY, Keys.MACHINE_MANUFACTURERS_TITLE_KEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MachineManufacturers as(String alias) {
		return new MachineManufacturers(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MachineManufacturers rename(String name) {
		return new MachineManufacturers(name, null);
	}
}
